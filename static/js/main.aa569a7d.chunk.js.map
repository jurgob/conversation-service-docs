{"version":3,"sources":["sequence_diagram_templates.js","rtc_websequencediagram.js","CustomOpenApi.js","flow_exec.js","SequenceDiagrams.js","App.js","serviceWorker.js","index.js"],"names":["CREATE_USER","CREATE_CONVERSATION","module","exports","templates","SHOW_VAPI","CBE","CS","MB","LVN","VAPI","CS_URL","CS_INT_URL","MB_URL","VAPI_INT_URL","indentData","data","JSON","stringify","split","map","line","whiteNum","search","Array","join","trim","httpRequest","from","to","method","url","httpResponse","status","res","getPSTNinboundRinging","lvn","diagram","type","body","user","id","createConversation","name","createUser","props","meta","fullPSTNinboundIVRwithTTS","OpenAPISampler","require","eventCompactView","eventRow","event","pattern","includes","enum","eventRes","objectCompactView","openapiObject","format","$ref","properties","isArray","val","Object","keys","forEach","propKey","newBody","getSchemaSpec","resource","schema","res_name","slice","pop","CustomOpenApi","spec","webhooks_events","components","schemas","callback","oneOf","refs","getRefs","specs","values","reduce","acc","filter","compactEvent","exampleJson","sample","skipReadOnly","style","borderBottom","display","verticalAlign","marginRight","obj","refpath","executeTemplateSteps","template","curStepIdx","steps","length","curStep","stepHttpGenWebSeqDiagram","step","from_partecipant","request","to_partecipant","steps_to","response","from_steps_string","step_to","statusCodeString","responseString","toUpperCase","flow_exec","execTemplateWebSeqDiagram","graphString","appendGraphString","str","partecipants","part","templateExec","nextStep","next","done","value","wsModule","template_seq_diagram","SequenceDiagram","input","onError","options","theme","diagramsSimple","title","description","diagramsFullScenarios","TemplateList","onTemplateClick","diagrams","idx","key","SequenceDiagrams","Custom","CustomV3","specsV3","Home","RowOpenApi","background","padding","SequenceDiagramPage","OpenApiUi","docExpansion","OpenApiUiV3","Redoc","RedocV3","Header","class","href","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa569a7d.chunk.js","sourcesContent":["\nconst cs_url_beta = `api.nexmo.com/beta`\n// const cs_url_beta2 = `api.nexmo.com/beta2`\n\nconst CREATE_USER = {\n  \"title\": \"create user\",\n  \"description\": \"create a conversation. You need to create an application first\",\n  \"partecipants\": [{\"id\":\"My_BackEnd\"}, {\"id\":\"CS\"}, {\"id\":\"MB\"}],\n  \"steps\": [\n    {\n      \"from_partecipant\":\"My_BackEnd\",\n      \"to_partecipant\": \"CS\",\n      \"request\": {\n        \"method\": \"post\",\n        \"url\": `${cs_url_beta}/users`,\n        \"data\": {\n        }\n      },\n      \"response\": {\n        \"data\": {\n          \"id\": \"<USR-A_ID>\"\n        },\n        \"status\": 200\n      }\n    }\n  ]\n}\n\n\nconst CREATE_CONVERSATION = {\n  \"title\": \"create conversation\",\n  \"description\": \"create a conversation. You need to create an application, and a user first\",\n  \"partecipants\": [{\"id\":\"My_BackEnd\"}, {\"id\":\"CS\"}, {\"id\":\"MB\"}],\n  \"steps\": [\n    {\n      \"from_partecipant\":\"My_BackEnd\",\n      \"to_partecipant\": \"CS\",\n      \"request\": {\n        \"method\": \"post\",\n        \"url\": `${cs_url_beta}/conversations`,\n        \"data\": {\n          \"name\": \"<CONV_NAME>\",\n        }\n      },\n      \"steps_to\": [\n        {\n          \"to_partecipant\": \"MB\",\n          \"request\": {\n            \"method\": \"post\",\n            \"url\": \"/mixers\",\n            \"data\": {\n              \"mixer_id\": \"<MIXER_ID>\"\n            }\n          }\n        }\n      ],\n      \"response\": {\n        \"status\": 200,\n        \"data\": {\n          \"conversation_id\": \"<CONV_ID>\",\n          \"mixer_id\": \"<MIXER_ID>\"\n        }\n\n      }\n    }\n  ]\n}\n\n\n\nmodule.exports = {\n  templates: [CREATE_USER, CREATE_CONVERSATION]\n}\n","/* eslint-disable no-unused-vars */\n\nfunction wsModule(options={}){\n\n    let {SHOW_VAPI} = options\n    SHOW_VAPI = typeof SHOW_VAPI === 'boolean' ? SHOW_VAPI : true\n\n    const CBE = `CustomerBackend`\n    const CS = `CS`\n    const MB = `MB`\n    const LVN = `CustomerLVN`\n    const VAPI = \"VAPI\"\n    const CS_URL = `api.nexmo.com`\n    const CS_INT_URL = `conversation.local`\n    const MB_URL = `mediabridge.local`\n    const VAPI_INT_URL = `vapi.local`\n\n\n    function partecipants(props){\n\n    //     const check = {\n    // VAPI: typeof props.VAPI === 'boolean' ? props.VAPI : true\n    // }\n\n        return `\n    participant \"${VAPI}\"\n    participant \"${CS}\"\n    participant \"${MB}\"\n    participant \"${LVN}\"\n    `\n    }\n\n    function indentData(data){\n        const res = JSON.stringify(data, '  ', '  ').split('\\n').map(line => {\n        const whiteNum = line.search(/\\S|$/)\n        return new Array(whiteNum+1).join(\".\") + line.trim()\n        }).join('\\\\n')\n        return res\n    }\n\n    function httpRequest({from, to, method, url, data}){\n        return `\n        ${from}->${to}: ${method} ${url}\n        Note right of ${from}: ${indentData(data)}\n        `\n    }\n\n    function httpResponse({from, to, status, res}){\n        return `\n        Note left of ${to}: ${indentData(res)}\n        ${to}->${from}: ${status}\n        \n        `\n    }\n\n    function createConversation(props={}){\n        const {name} = props\n        const request = {\n            name:\"CONV\",\n\n        }\n        const response = {\n            name:\"CONV\",\n            id:\"CON-CONV_ID\"\n        }\n\n        const requestMB = {}\n        const requestMBResponse = {\n            id:\"MIXER-ID\"\n        }\n\n        const diagram =`\n            ${httpRequest({from: CBE, to: CS, method: \"POST\", url: `${CS_URL}/v0.3/conversations`, data: request})}\n                ${httpRequest({from: CS, to: MB, method: \"POST\", url: `${MB_URL}/api/mixers`, data: requestMB})}\n                ${httpResponse({from: CS, to: MB, status: 200, res: requestMBResponse})}\n            ${httpResponse({from: CBE, to: CS, status: 201, res: response})}\n        `\n\n        return {\n            diagram\n        }\n\n    }\n\n    function getPSTNinboundRinging(props = {}){\n        const {lvn='666'} = props\n        const mbEvent = {\n            \"event\":\"ringing\",\n            \"call_id\": \"LEG_ID\",\n            \"direction\": \"inbound\",\n            \"from\": \"CLIENT_NUBER\",\n            \"to\": \"CUSTOMER_LVN\",\n        }\n\n        const csEventKnocking = {\n            type:\"app:knocking\",\n            body:{\n                user:{\n                    id:\"USR-1\"\n                }\n            }\n        }\n\n        const csEventRinging = {\n            type:\"sip:ringing\"\n        }\n\n        const diagram =`\n\n        ${LVN}->${MB}: inbound call from ${lvn}\n        ${MB}->${CS}: POST ${CS_INT_URL}/v1/mediaEvent\n        Note right of ${MB}: ${indentData(mbEvent)}\n        \n        ${CS}->${VAPI}: ${VAPI_INT_URL}/event/conversation\n        Note right of ${CS}: ${indentData(csEventRinging)}\n        \n        ${CS}->${VAPI}: ${VAPI_INT_URL}/event/conversation\n        Note right of ${CS}: ${indentData(csEventKnocking)}\n\n    ` \n\n        return {\n            diagram\n        }\n    }\n\n\n    function createUser(props={}, meta={}){\n        const {name} = props\n        let {from}= meta\n        if(!from) from = CBE\n        \n        let response = {\n            name:\"USER_NAME\",\n            id:\"USR-ID\"\n        }\n\n        const diagram =`\n        ${from}->${CS}: POST ${CS_INT_URL}/v0.3/users\n        Note right of ${from}:  ${indentData(props)}\n        Note left of ${CS}:  ${indentData(response)}\n        ${CS}->${from}: 201\n    `\n\n        return {\n            diagram\n        }\n    }\n\n\n    function fullPSTNinboundIVRwithTTS(){\n        const lvn =\"777\"\n    const diagram = `\n        ${getPSTNinboundRinging({lvn}).diagram}\n`\n        return {\n            diagram\n        }\n    }\n\n    return {\n        createConversation,\n        createUser,\n        getPSTNinboundRinging,\n        fullPSTNinboundIVRwithTTS\n    }\n\n}\n\n\nmodule.exports = wsModule","import React from \"react\";\nimport ReactJsonSyntaxHighlighter from 'react-json-syntax-highlighter'\nconst OpenAPISampler = require('openapi-sampler');\n\n\nfunction objectCompactView(openapiObject){\n\tif(typeof openapiObject !== \"object\")\n\t\treturn openapiObject\n\telse if(openapiObject.type && openapiObject.type !== \"object\") {\n\t\tconst format = openapiObject.format ? `(${openapiObject.format})` : ``;\n\t\treturn `<${openapiObject.type}${format}>`\n\t} else if(openapiObject.$ref)\n\t\treturn `<${openapiObject.$ref}>`\n\telse if(openapiObject.properties)\n\t\treturn objectCompactView(openapiObject.properties)\n\telse if(openapiObject.type && openapiObject.type === \"object\" && !openapiObject.properties)\n\t\treturn {}\n\telse if(Array.isArray(openapiObject))\n\t\treturn openapiObject.map(val =>objectCompactView(val) )\n\telse {\n\t\tlet res = {}\n\t\tObject.keys(openapiObject)\n\t\t\t.forEach(propKey => {\n\t\t\t\tres[propKey] = objectCompactView(openapiObject[propKey])\n\t\t\t})\n\t\treturn res\n\t}\n\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction propCompectView(prop){\n\tif(prop.$ref)\n\t\treturn `<${prop.$ref}>`\n\n\telse if(prop.type === \"object\")\n\t\treturn {...prop.properties}\n\n\treturn prop;\n}\n\nfunction eventCompactView(eventRow){\n\tconst event = {...eventRow}\n\t//set type\n\tlet type = \"notype!\"\n\tif(event && event.type){\n\t\tif(eventRow.type.pattern && eventRow.type.pattern.includes(\"custom\") )\n\t\t\ttype = \"custom:*\"\n\t\tif(eventRow.type.enum)\n\t\t\ttype = eventRow.type.enum[0]\n\n\t}\n\t//event.type = type\n\tdelete event.type\n\tconst eventRes = objectCompactView(event)\n\tconst newBody =eventRes.body\n\tdelete event.body\n\n\n\teventRes.type = type;\n\teventRes.body = newBody;\n\n\n\t// Object.keys(event)\n\t// \t.filter(key =>key !== \"type\")\n\t// \t.forEach(key => {\n\t// \t\tevent[key] = propCompectView(event[key])\n\t// \t})\n\t//set body\n\n\t// if(event.body && event.body.properties){\n\t// \tevent.body = event.body.properties\n\t// }\n\n\t// eventRes.originalEvent = eventRow\n\treturn eventRes;\n}\n\nfunction getRefs(specs){\n\tif(typeof specs !== \"object\" )\n\t\treturn undefined\n\tif(specs[\"$ref\"])\n\t\treturn { [specs[\"$ref\"]] : true }\n\treturn Object.values(specs)\n\t\t.reduce(\n\t\t\t(acc, spec) => ({\n\t\t\t\t...acc,\n\t\t\t\t...getRefs(spec)\n\t\t\t}),\n\t\t\t{}\n\t\t)\n}\n\nfunction getSchemaSpec(resource, schema){\n\tconst res_name = resource.split('/').slice(-1).pop()\n\treturn schema['components']['schemas'][res_name ]\n\t//path = \"#/components/schemas/session_id\".split('/').splice(1)\n}\n\nfunction CustomOpenApi({spec}) {\n\tconst webhooks_events = spec.components.schemas.callback.oneOf.map(({properties}) =>  properties)\n\n  \tconst refs = Object.keys(getRefs(webhooks_events))\n//   return (\n// \t\t<pre>{JSON.stringify(getSchemaSpec(refs[0], spec), null, ' ')}</pre>\n//   )\n  return (\n\t<div>\n\t\t<h1>CS events</h1>\n\t\t<p>CS events, we document those here cuz openapi output may be confusint</p>\n\t\t<p>there are two sections: <b>Webhooks events list</b> and <b>Object legend</b> (scroll down) </p>\n\t\t<h2>Webhooks events list</h2>\n\t\t<p>if you enable the rtc capability in your application, you will start to receive the following events:</p>\n\t\t<div>\n\t\t\t{webhooks_events\n\t\t\t\t.filter(event => event && event.type)\n\t\t\t\t.map(event => {\n\t\t\t\t\tconst compactEvent = eventCompactView(event)\n\t\t\t\t\tconst exampleJson = OpenAPISampler.sample({type:\"object\", properties: event}, {skipReadOnly: false}, spec)\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3 style={{borderBottom: \"1px solid #ddd\"}}>{compactEvent.type}</h3>\n\t\t\t\t\t\t\t<div style = {{display: \"inline-block\",verticalAlign:\"top\", marginRight: \"30px\"}} >\n\t\t\t\t\t\t\t\t<h4>Event </h4>\n\t\t\t\t\t\t\t\t<ReactJsonSyntaxHighlighter obj={compactEvent} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style = {{display: \"inline-block\",verticalAlign:\"top\", marginRight: \"60px\"}} >\n\t\t\t\t\t\t\t\t<h4>Example </h4>\n\t\t\t\t\t\t\t\t<ReactJsonSyntaxHighlighter obj={exampleJson} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style = {{display: \"inline-block\"}} >\n\t\t\t\t\t\t\t\t<h4>OpenApi </h4>\n\t\t\t\t\t\t\t\t<ReactJsonSyntaxHighlighter obj={event} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t\t<h2>Object legend</h2>\n\t\t<div>\n\t\t\t{refs.map(refpath => {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>{refpath}</h3>\n\t\t\t\t\t\t<ReactJsonSyntaxHighlighter obj={getSchemaSpec(refpath, spec)} />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t\t\n\t\t\t})}\n\t\t</div>\n\t</div>\n\n  );\n}\n\n\nexport default CustomOpenApi;","\nfunction *executeTemplateSteps(template){\n  var curStepIdx = 0\n  while(curStepIdx < template.steps.length){\n    let curStep =template.steps[curStepIdx];\n    yield curStep;\n    curStepIdx = curStepIdx + 1;\n  }\n}\n\n\n\nfunction indentData(data){\n  const res = JSON.stringify(data, '  ', '  ').split('\\n').map(line => {\n    const whiteNum = line.search(/\\S|$/)\n    return new Array(whiteNum+1).join(\"_\") + line.trim()\n  }).join('\\\\n')\n  return res\n}\n\nfunction stepHttpGenWebSeqDiagram(step,from_partecipant){\n  if(!from_partecipant )\n    from_partecipant = step.from_partecipant;\n\n  const {request, to_partecipant, steps_to, response} = step\n  const {data, url, method} = request\n\n\n// const from_steps_string=''\n\n  let from_steps_string = ''\n  if(steps_to){\n    from_steps_string = steps_to.map(step_to => stepHttpGenWebSeqDiagram(step_to, to_partecipant))\n  }\n\n\n  let statusCodeString=\"\"\n  let responseString=\"\"\n  if(response){\n    statusCodeString=response.status\n    responseString=`Note left of ${to_partecipant}: ${indentData(response.data)}`\n  }\n\n\n  return `\n${from_partecipant}->${to_partecipant}: ${method.toUpperCase()} ${url}\nNote right of ${from_partecipant}: ${indentData(data)}\n${from_steps_string}\n${responseString}\n${to_partecipant}-->${from_partecipant}: ${statusCodeString}\n`\n}\n\nfunction execTemplateWebSeqDiagram(template){\n  let graphString = \"\"\n  const appendGraphString = str => { graphString += (str + `\\n`)  }\n\n  //appendGraphString(`title ${template.title}`)\n  template.partecipants.map(part => appendGraphString(`participant ${part.id}`))\n\n  var templateExec = executeTemplateSteps(template);\n  let nextStep = templateExec.next()\n  while(!nextStep.done){\n    appendGraphString(stepHttpGenWebSeqDiagram(nextStep.value))\n    nextStep = templateExec.next()\n    //stepHttpGenDiagram\n  }\n  return graphString;\n  //console.log(graphString)\n}\n\nconst flow_exec = {\n  execTemplateWebSeqDiagram\n};\nexport default flow_exec;\n\n","\nimport React from \"react\";\nimport flow_exec from \"./flow_exec\";\nimport SequenceDiagramPrivate from 'react-sequence-diagram';\nconst {execTemplateWebSeqDiagram} = flow_exec\nconst { templates } =  require(\"./sequence_diagram_templates\");\nconst wsModule = require(\"./rtc_websequencediagram\")\n\nconst {createConversation, getPSTNinboundRinging,createUser, \n  fullPSTNinboundIVRwithTTS} = wsModule()\n\n\ntemplates.map(template => {\n  return {\n    template,\n    template_seq_diagram:execTemplateWebSeqDiagram(template)\n  }\n})\n\nconst SequenceDiagram =({input,onError}) =>  <SequenceDiagramPrivate \n\tinput={input} \n\toptions={{\n  \t\ttheme: 'simple'\n\t}} \n\tonError={onError} \n/>\n\n\nconst diagramsSimple = [\n  {\n    title:\"Create conversations\",\n    description:\"Create conversations\",\n    diagram:createConversation().diagram\n  },\n  {\n    title:\"Get PSTN inbound ringing\",\n    description:\"Receive a PSTN inbound call from a client calling an LVN\",\n    diagram:getPSTNinboundRinging().diagram\n  },\n  {\n    title:\"create user\",\n    description:\"create a user\",\n    diagram: createUser().diagram\n  }\n\n]\n\nconst diagramsFullScenarios = [\n\n  {\n    title:\"PSTN inbound IVR use case, aka VAPI hello world\",\n    description:\"Receive a PSTN inbound call from a client calling an LVN, respond with an text to speech, close the call \",\n    diagram:fullPSTNinboundIVRwithTTS().diagram\n  }\n\n]\n\nconst TemplateList = ({onTemplateClick, diagrams}) => {\n  return (\n    <div>\n      {diagrams.map(({diagram, title, description}, idx) => {\n          return (\n          <p key={idx} >\n            <h3>{title}</h3>\n            <p>{description}</p>\n            <SequenceDiagram input={diagram} />\n          </p>\n          )\n      })}\n    </div>\n  )\n}\n\nfunction SequenceDiagrams(){\n\treturn (\n\t\t<div>\n\t\t\t<h1>RTC Flow Diagrams - Atomic ones</h1>\n\t\t\t<TemplateList diagrams={diagramsSimple} />\n      <h1>RTC Flow Diagrams - Full scenarios</h1>\n\t\t\t<TemplateList diagrams={diagramsFullScenarios} />\n\t\t</div>\n\t)\n}\n\nexport default SequenceDiagrams;","import React from \"react\";\nimport {HashRouter, Route, Link } from \"react-router-dom\";\n// import specs from './openapi_specs/specs.openapi_v1.json';\nimport specs from './openapi_specs/specs.openapi_all.json';\nimport specsV3 from './openapi_specs/specs.openapi_v3.json';\nimport SwaggerUI from \"swagger-ui-react\";\nimport \"swagger-ui-react/swagger-ui.css\";\nimport { RedocStandalone } from 'redoc';\nimport CustomOpenApi from './CustomOpenApi';\nimport SequenceDiagrams from './SequenceDiagrams';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <HashRouter basename='/' >\n      <Header />\n      <div class=\"mainbody\" >\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/rowopenapi\" component={RowOpenApi} />\n        <Route path=\"/sequencediagram\" component={SequenceDiagramPage} />\n        <Route path=\"/openapiui\" component={OpenApiUi} />\n        <Route path=\"/openapiuiv3\" component={OpenApiUiV3} />\n        <Route path=\"/custom\" component={Custom} />\n        <Route path=\"/customv3\" component={CustomV3} />\n        <Route path=\"/redoc\" component={Redoc} />\n        <Route path=\"/redocv3\" component={RedocV3} />\n        \n      </div>\n    </HashRouter>\n  );\n}\n\n\nfunction Custom() {\n  return <CustomOpenApi spec={specs} /> \n}\n\nfunction CustomV3() {\n  return <CustomOpenApi spec={specsV3} /> \n}\n\nfunction Home() {\n  return <div>\n    <h1>Conversation Service Internal Documetation</h1>\n    <p>\n      go to the : <Link to=\"/openapiui\">specs</Link> to see the open api specs\n    </p>\n    <p>\n      Some part of the api could be hard to visualize in the standard openapi view. check  the <Link to=\"/custom\">Custom Webhook specs</Link> to see something easier\n    </p>\n  </div>\n}\n\nfunction RowOpenApi() {\n  return <pre style={{background: \"#dfdfdf\", padding: \"10px\"}} >{JSON.stringify(specs, null, '  ')} </pre>;\n}\n\n\nfunction SequenceDiagramPage() {\n  return <SequenceDiagrams />;\n}\n\nfunction OpenApiUi() {\n  return <SwaggerUI docExpansion=\"list\" spec={specs} />;\n}\n\nfunction OpenApiUiV3() {\n  return <SwaggerUI docExpansion=\"list\" spec={specsV3} />;\n}\n\n\n\nfunction Redoc() {\n  return <RedocStandalone spec={specs} />;\n}\n\nfunction RedocV3() {\n  return <RedocStandalone spec={specsV3} />;\n}\n\n\nfunction Header() {\n  return (\n    <ul class=\"header-nav\" >\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/openapiuiv3\">Open api ui V0.3</Link>\n      </li>\n      <li>\n      <li>\n        <Link to=\"/customv3\">Custom Webhook specs V0.3</Link>\n      </li>\n        <Link to=\"/openapiui\">Open api ui</Link>\n      </li>\n      <li>\n        <Link to=\"/custom\">Custom Webhook specs</Link>\n      </li>\n      <li>\n        <Link to=\"/sequencediagram\">Web Sequence Diagram</Link>\n      </li>\n      <li>\n        <Link to=\"/rowopenapi\">Row Open Api</Link>\n      </li>\n      <li>\n        <Link to=\"/redoc\">Redoc</Link>\n      </li>\n      <li>\n        <Link to=\"/redocv3\">Redoc V3</Link>\n      </li>\n      <li>\n        <a href=\"https://github.com/jurgob/conversation-service-docs\">Git hub project</a>\n      </li>\n    </ul>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}